Test Suite for [Sinatra::Cache v0.2.0] produced on [2009-25-02 at 00:37]

== Sinatra::Cache
=== ClassMethods
==== the :version method
* should have a :version method that returns a String with the version number in it
* should not interfere with the normal Sinatra VERSION
=== Instance Methods
==== Private
===== :cache_file_name method
====== when using default options
* should handle '/' and return 'index.html'
* should handle top level URI's and return the URI plus '.html'
* should handle sub level URIs and return the directory/file format
====== when using customized options
* should handle '/' and return 'index.html'
* should handle top level URI's and return the URI plus '.html'
* should handle sub level URIs and return the directory/file format
===== :cache_page_path method
====== when using default options
* should handle '/' and return the full path to 'index.html'
* should handle top level URI's and return the full path to the URI plus '.html'
* should handle sub level URIs and return the full path to the URI
====== when using customized options
* should handle '/' and return the full path to 'index.html'
* should handle top level URI's and return the full path to the URI plus '.html'
* should handle sub level URIs and return the full path to the URI
===== :log method
* MISSING TESTS =>
==== Public
===== :cache method
====== when using default options
* is tested below in the Page Caching section
====== when using customized options
* is tested below in the Page Caching section
=== configuration methods
==== when using default options
* the :cache_enabled option should be correct (true)
* the :cache_page_extension option should be correct (.html)
* the :cache_dir option should be correct ('') 
* the :cache_logging option should be correct (true)
* the :cache_logging_level option should be correct (:info)
==== when using customized options
* the :cache_enabled option should be correct (false)
* the :cache_page_extension option should be correct (.cache.html)
* the :cache_dir option should be correct ('system/cache') 
* the :cache_logging option should be correct (true)
* the :cache_logging_level option should be correct (:info)
=== Page Caching
==== when using default options
* should NOT cache the un-cached index page
* should cache the /cache page
* should expire the /cache page
==== when using customized options
* should NOT cache the un-cached index page
* should NOT cache the /cache page since :cache_enabled => false
===== and setting cache_enabled => true
* should cache the /cache page
* should expire the /cache page
=== Sinatra::Base
==== should respond to
* the :cache_dir method
* the :cache_dir= method
* the :cache_dir? method
* the :cache_enabled method
* the :cache_enabled= method
* the :cache_enabled? method
* the :cache_logging method
* the :cache_logging= method
* the :cache_logging? method
* the :cache_logging_level method
* the :cache_logging_level= method
* the :cache_logging_level? method
* the :cache_page_extension method
* the :cache_page_extension= method
* the :cache_page_extension? method
=== Sinatra::Default
==== should respond to
* the :cache_dir method
* the :cache_dir= method
* the :cache_dir? method
* the :cache_enabled method
* the :cache_enabled= method
* the :cache_enabled? method
* the :cache_logging method
* the :cache_logging= method
* the :cache_logging? method
* the :cache_logging_level method
* the :cache_logging_level= method
* the :cache_logging_level? method
* the :cache_page_extension method
* the :cache_page_extension= method
* the :cache_page_extension? method

64 specifications (84 requirements), 0 failures
